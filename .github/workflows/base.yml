name: CI Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  packages: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/future-re/ubuntu22.04-clang20-boost1.89-gtest1.17:0.2

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache ccache
        uses: actions/cache@v3
        with:
          path: /home/runner/.ccache
          key: ${{ runner.os }}-ccache-${{ hashFiles('**/CMakeLists.txt','**/*.cpp','**/*.c','**/*.h','**/*.cppm') }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Show tool versions
        run: |
          uname -a
          cmake --version || true
          clang++ --version || true

      - name: Configure project
        env:
          CCACHE_DIR: /home/runner/.ccache
        run: |
          cmake -B build -G Ninja \
            -DCMAKE_C_COMPILER=clang-20 \
            -DCMAKE_CXX_COMPILER=clang++-20 \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_FLAGS="--gcc-toolchain=/usr -stdlib=libstdc++" \
            -DCMAKE_EXE_LINKER_FLAGS="-stdlib=libstdc++" \
            -DCMAKE_SHARED_LINKER_FLAGS="-stdlib=libstdc++" \
            -DCMAKE_CXX_STANDARD=23

      - name: Build project
        run: cmake --build build -j$(nproc)

      - name: Run tests
        run: ctest --test-dir build --output-on-failure

  build-docs:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install mkdocs dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material mkdocs-i18n

      - name: Build MkDocs site
        working-directory: mkdocs
        run: mkdocs build --clean

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: mkdocs/site

  deploy-ghpages:
    needs: build-docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout full repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install mkdocs dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material mkdocs-i18n

      - name: Configure git for pushing
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}

      - name: Publish site to gh-pages
        working-directory: mkdocs
        run: mkdocs gh-deploy --force --config-file mkdocs/mkdocs.yml